linux 文件系统管理
      linux文件系统： ext2  ext3  ext4   xfs  btrfs ....swap 
windows : 
      fat32  ntfs
unix :
      ffs ufs jfs2
网络文件系统：
      NFS CIFS
集群文件系统：
      GFS2， OCFS2
分布式文件系统：
      ceph  moosefs mogilefs ....
光盘： iso9000
根据是否支持“journal”功能：（日志）
      日志型文件系统：EXT3 EXT4...
      非日志型文件系统：EXT2...

        任何一个文件系统的组成部分都有两部分
                1.内核中的模块：例如ext4，xfs
                2.用户空间的管理工具：例如ext系列中都有mkfs.ext4就是
                                      xfs的就是mkfs.xfs

        ====

        ====
    <1>linux的虚拟文件系统：VFS （将多种多样的文件系统，统一成一个VFS，我们操作VFS就行了，）
    eg： lsmod ：查看所有在内核装载的模块
    cat /proc/filesystem  
        
        命令：
        mkfs.ext4:(centos 6)
        mkfs.btrfs:(centos 7)
        blkid  设备+分区:      [jie@VM-0-9-centos 4_文件系统管理]$ blkid /dev/vda1
                               /dev/vda1: UUID="4b499d76-769a-40a0-93dc-4a31a59add28" TYPE="ext4" 

(1)创建文件系统：mkfs.xxx
        ------------------------------------------------------  
        |   1.mkfs.FS_TYPR  /dev/vd？？： 将磁盘分区格式化创建新的文件系统
        |   
        |   2.mkfs -t FS_TYPE  /dev/vd?? :和第一个一样
        |          type：
        |             ----------------------
        |             | ext4  ：centos6
        |             | xfs   ：
        |             | btrfs ：centos7
        |             | vfat
        |             ----------------------
        |      ==>设置卷标：暨UUID_SUB
        |              -L  'LABEL' :设定卷标
        ----------------------------------------------


                    blkid:块设备属性信息查看
        ----------------------------------------------
        |  
        |      blkid OPPION DEVICE
        |          -U UUID： 根据 UUID  来查找设备
        |          -L LABLE： 卷标 卷名称 来查找设备
        -----------------------------------------------------  














                mke2fs：ext系列文件系统专用管理工具
        ----------------------------------------------
        |  
        |      -t：指定系统类型 {ext2|ext3|ext4}
        |      -b：指定块大小 {1024byte|2048| 4096}
        |      -L: 指明卷标 LABEL
        |      -i #：为数据空间中每多少个字节创建一个inode
        |              ==>
        |                  1.无论如何，该大小，不能小于块大小
        |                  否则会有浪费
        |      -N #：为数据空间创建多少个inode
        |      -m #：为管理人员预留的空间占据的百分比
        |              --->为管理员流下操作的空地
        |      -O 特性[...]:
        |          -O ^ 特性：关闭指定特性
        |          -O  特性：起用指定特性
        -----------------------------------------------------
        |            mkswap：创建交换分区
        |    makswap  [options ] devies
        |        -L: LABLE
        |        格式化makswap类型的文件系统：需要调整分区id为82
        |--------------------------------------------



        |----------------------------------------------
        |    e2labe:管理ext系列文件系统的LABLE
        |----------------------------------------------
         e2lable DEVICE [LABLE]:

           
        tune2fs:重新设定ext2系列文件系统可调整参数的值
       |----------------------------------------------
       |     可调整的参数：
       |         -l：查看指定文件系统的超级块信息 
       |              =====>超级块 ：what？
       |             |   超级块中保存了全局文件信息
       |             |   如硬盘已用空间、数据块可用空间、inode结点信息等等。
       |         -L LABEL :修改卷标
       |         -m #：修改预留给管理员的百分比
       |         -j ：将ext2升级
       |         -O ：文件系统属性的起用或禁用
       |         -o ：调整文件系统的默认挂载选项
       |         -U UUID：修改UUID
       |----------------------------------------------
        dumpe2fs :
            -h DEVICE ：查看超级块信息
    
    


文件系统检测：
    fsck：file system check
        fsck.FS_TYPE:文件系统检测
                eg :fsck.ext2 fsck.btrfs fsck -t ext3
        -a：自动修复错误
        -r：交互式修复错误
    e2fsck:ext系列文件专用的检测修复工具
        -a：自动修复，自动回答为yes
        -f：强制修复（全面修复）


        下面有图：


























                                               元数据区
            ===========================================
            |   日   |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |        |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |   志   |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |   空   |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |        |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |   间   |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |        |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |        |_|_|_|_|_|_|_|_|_|_|_|_|_|      |
            |________|_|_|_|_|_|_|_|_|_|_|_|_|_|      |



                                    元数据区
            ================================
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
            |_|_|_|_|_|_|_|_|_|_|_|_|      |
