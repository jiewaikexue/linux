
token(只有密码)
identity（认证机制，用户名+密码）

用户和组管理：（主要目的是资源分配）

3A概念：
    Authentication：认证 （账号+密码）
    Authorization：授权  （
    Accouting：审计

    linux用户两类：
        root：id号永远是0
        普通用户：id号是1~65535（其实本质上是32位）
            系统用户：UID号1~499    os7 1~999
                    ||主要是为了
                    ||守护进程获取资源，进行权限分配
            登陆用户：UID号500~65535 os7 999+
                    ||主要目的是
                    ||为了完成交互式登陆
    linux组：（组，是一种容器，组是权限分配的根本，用户的权限其实是来源于组的，同组权限相等）
        root组：GID为0
        普通组：
            系统组：1~499 os7 1~999
            普通组：500+  os7 999+
    linux的安全上下文：==进程所能访问的所有资源的权限，取决于进程发起者的身份
        运行中的程序：进程（process）
            进程是以发起者的身份的运行的：
                发起者的权限会决定进程的权限：
    linux组的类别：
        用户的基本组（主组）：主要是用户创建文件时用
                            ||区分：
                            组名==用户名，且仅有一个用户：私有组

        用户的额外组（附加组）：
            ||/etc/passwd:用户及其属性信息（名称uid，基本组id等等）
            ||/etc/group:组及其基本信息
            ||/etc/shadow:用户密码及其相关信息
            ||/etc/gshadow:组密码及其相关信息
        /etc/passwd
            name:  password     ：UID: GID      :GECOS:directory:shell
        用户名  ：密码（占位符）：UID：基本组GID：用户的完整信息：主目录：默认shell
        /etc/group
            group_name:password:GID:user_list
            组名 ：组密码（占位符）：GID：以当前组为附加组的用户列表（分隔符为逗号）
        /etc/shadow:===密码真正存在的地方
                    ||/etc/passwd和/etc/group 里面的密码都是占位符
                    ||影子密码技术
            ================================================
            |       这个文件夹只有root可以看
            |       ---------- 1 root root 774 Jun  9 22:29 shadow
            ================================================
            shadow的内容：
                root:$1$PNaFEmqA$EVnUoaQDIBCykDtmMYYUF/:18422:0:99999:7::: 
                用户名：加密后的密码：最近一次更改密码的日期：密码的最小使用期限：密码的最大使用期限：密码警告期限：密码禁用期：账户过期日期：保留字段
                警告期：距离最大使用期限前几天
                禁用期：到达最大期限后几天，还可以登录，但是登录之后立刻要求你改密码
                过期日期：不管密码有没有用，账号直接过期
                保留字段：为了将来~(*^▽^*)~


                ====>密码的加密机制：单向加密机制：
                       加密：明文----->密文
                       解密：密文----->明文
                       单向加密：只可以加密。无法解密
                            ======================================
                            ||提取数据指纹（暨数据的唯一特征码）
                            ||输入数据相同，密文一定相同
                            ||输入数据有一点不同，密文不同
                            ======================================
                            ======================================
                            || md5：message digest（消息摘要）128位
                            || sha1：安全的哈希算法（secure hash algorithm）60bit
                            || sha224，sha384，sha512，sha256
                            ======================================
                        单向加密的雪崩效应：初始条件的微笑改变，讲引起结果的巨大改变。
                        单向加密的定长输出：算法相同，长度一定相同
                    为了避免两个用户密码相同，得出来的密文相同：
                                ||在创建密文的时候，必须加点随机的杂质--->引起雪崩
                                ||杂质必须保存起来
                                ||下一次用户输入密码后，把杂质加进去，然后生成密文
                                |密文进行匹配
                                ||所以杂质必须保存起来
                                ||杂质在shadow文件里。密文的$xxxxxx$之间
                        =========================================================
                        ||  jie:$1$759XFDFa$rFgnbhTMgnYkdIb/a8XKz0:18422:0:99999:7:::            
                        ||  QaQ:$1$TFIuQWwx$zJJkqSrelsmDdacV44D6m1:18422:0:99999:7:::
                        =========================================================
                                jie:杂质是$1$中的1
                                QaQ:杂质是$1$中的1
                    所以密码要采取复杂性策略：
                            1.使用数字，大小写字母，特殊字符中至少3中
                            2.够长~
                            3.使用随机密码
                            4.定期更换：（linux只要定期更换杂质就行了）不要使用近期用过的密码
<2>用户和组相关的管理命令：
    useradd：
        -u: 指定一个非负数为用户的特定uid（不能冲突，不能超范围）
            ||[UID_MIN,UID_MAX],定义在/etc/login.defs
            ||默认是没有占用的最小的那个。
        -g：用户初始登陆组的GID，组名必须存在。指明用户所在的组
        -c：添加用户的注释信息（完整信息）
        -d /path/to/home：指定用户家目录
                        ||指定目录不存在：创建目录
                        ||指定目录存在：不会才能够/etc/skel中复制任何文件
                        ||/etc/skel目录下的文件，是用来创建用户的家目录的
        -s：指定用户的默认shell：
            ||这个默认的shell在/etc/default/useradd中定义了一个SHELL变量
            ||
        -G:为用户指明附加组，但是必须实现存在
