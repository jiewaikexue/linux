文件系统的其他概念
超级块：dump2fs 可以查看超级块
块组：基本的管理单位是 块组
      就类似于自治区
      每个块组，有属于自己的数据区和元数据去
      元数据区域：
            inodetable：inode表
            inodebitmap：索引位图
      数据区域：
            块：
            块位图：

GDT：块组描述符
          |  ---------------------------------------------------------------------------
          |  Group 399: (Blocks 13074432-13106938) [INODE_UNINIT, ITABLE_ZEROED]
          |      冗余校验码 0x1ba2, 未使用的inodes 8192
          |      块位图  at 12582927 (bg #384 + 15), Inode 位图 at 12582943 (bg #384 + 31)
          |  Inode表位于 12590624-12591135 (bg #384 + 7712)
          |      32507 free blocks, 8192 free inodes, 0 directories, 8192个未使用的inodes
          |      可用块数: 13074432-13106938
          |      可用inode数: 3268609-3276800
          |  ------------------------------------------------------------------------------
                inode:索引节点
                        里面存有
                                地址指针：1.直接指针
                                          2.二级指针       ----  指向另外一片空间
                                          3.三级指针      -----   指向另外一片空间
                inode bitmap：inodemap用来建立与inode的索引
                              因为inode是在太多了
                              用来对位标识inode是否空闲的状态信息：索引的索引
                block bitmap：块的索引的索引
------------------------------------------------------
目录就是一种路径映射：
        目录自己就是一张表
        这张表里面存储的是  ---目录下面存储的 文件名字+改文件所对应的inode编号的对应关系
        找到文件名 映射的inode，在根据inode去找对应的块
------------------------------------------------------
-------------
硬连接：（共用一个inode）
        多个文件路径指向同一个inode编号，通过inode编号找到inode------暨访问同一个文件的两个路径
        ===>为什么不能给目录创建硬链接？
            会有循环引用
            .和..就是硬链接
        ===>硬链接不可以跨文件系统？
            因为inode的引用不能跨分区
-------------
软链接：也叫符号链接（有两个不同的inode）
        /etc/abc -->/usr/local/etc/abc
        通过文件路径找到对应的inode编号，通过inode编号，找到元数据区域的inode
        但是，这个inode里面并没有存地址指针。
        存储的是一个字符串。
        再去查找这个字符串对应的inode
        ===>符号链接文件大小为什么是字符串的大小？
            因为统计的是inode里面这个字符串的大小
        ===>可以对目录进行
        ===>可以跨分区
-------------
删除硬链接：
            inode的链接计数-1：直到计数为0的时候就可以删除了
            文件删除之后 inode计数减为0 块计数减为0
删除软链接：对源文件一点影响都没有
复制软连接：创建一个新的空文件，把源文件中的数据读出在写入
复制硬链接：创建一个新的空文件，把源文件中的数据读出在写入
文件移动：  跨分区移动：其实就是复制
            本分区移动：其实就是移动元数据的引用路径
-------------
ln 源文件 目标文件
ln -s 源文件 目标文件
-v：显示创建过程



练习题：创建一个20G的文件系统 块大小为2048，文件系统为ext4卷标为TEST，要求次分区开机后自动挂载值/testing目录，且默认有acl挂载选项
2.创建一个5g的文件系统，卷标为HUGE ，要求次分区开机自动挂载到/mogdata目录，文件系统为ext3
3.写一个脚本，完成下列功能
    （1）列出当前系统识别到的所有磁盘设备
    （2）如果磁盘数量为1，显示其空间的所有使用信息
        否则，则显示最后一个磁盘上的空间信息
